let code1 = "/* simple code to light up a Led connected to pin 8 of the arduino */" + "\n" 
+ "// for a better reading, lets call pin 7 : led" + "\n"
+ "#define led 7"+ "\n" 
+ "void setup() {" + "\n" 
+ "	pinMode(led, OUTPUT); // sets the pin as an Output" + "\n" 
+ "}" + "\n" 
+ "void loop() {" + "\n" 
+ "	digitalWrite(led, HIGH); // turns led on" + "\n" 
+ "}"; 

let code2 = "/*  making a led blink with half a second delay*/"+ "\n" 
+ "// for a better reading, lets call pin 7 : led" + "\n"
+ "#define led 7"+ "\n" 
+ "void setup() { "+ "\n" 
+ "	pinMode(led, OUTPUT); // sets the pin as an Output"+ "\n" 
+ "}"+ "\n" 
+ "void loop() {"+ "\n" 
+ "	digitalWrite(led, HIGH); // turns led on"+ "\n" 
+ "	delay(500);"+ "\n" 
+ "	digitalWrite(led, LOW);"+ "\n" 
+ "	delay(500);"+ "\n" 
+ "}";

let code3 = "#include <LiquidCrystal.h>"+ "\n"
+ "\n"
+ "LiquidCrystal lcd(12, 11, 5, 4, 3, 2);"+ "\n"
+ "\n"
+ "void setup(){" + "\n"
+ "	lcd.begin(16,2);" + "\n"
+ '	lcd.print("hello bitches!");'+ "\n"
+ "}"+ "\n"
+ "void loop(){"+ "\n"
+ "	lcd.setCursor(0,1);"+ "\n"
+ "	lcd.print(millis() / 1000);"+ "\n"
+ "}";
let code4 = "#include <LiquidCrystal.h>"+ "\n"
+ "\n"
+ "LiquidCrystal lcd(12, 11, 5, 4, 3, 2);"+ "\n"
+ "\n"
+ "void setup() {" + "\n"
+ "	lcd.begin(16,2);" + "\n"
+ "	Serial.begin(9600);" + "\n"
+ "}" + "\n"
+ "" + "\n"
+ "void loop() {" + "\n"
+ "	if(Serial.available()) {" + "\n"
+ "		delay(100);" + "\n"
+ "		lcd.clear();" + "\n"
+ "		while (Serial.available() > 0) {" + "\n"
+ "			lcd.write(Serial.read());" + "\n"
+ "		}" + "\n"
+ "	}" + "\n"
+ "}";
let code5 = "#define latchPin 8" + "\n" 
+ "#define clockPin 13" + "\n" 
+ "#define dataPin 10" + "\n" 
+ "\n" 
+ "void setup() {" + "\n" 
+ "	pinMode(latchPin, OUTPUT);" + "\n" 
+ "	pinMode(dataPin, OUTPUT);" + "\n"
+ "	pinMode(clockPin, OUTPUT);" + "\n"
+ "	Serial.begin(9600);" + "\n"
+ '	Serial.println("<<START>>");' + "\n"
+ "}" + "\n"
+ "\n"
+ "void loop() {" + "\n"
+ "	if (Serial.available() > 0) {" + "\n"
+ "		int number = Serial.read() - 48;" + "\n"
+ "		if (number >= 0) {" + "\n"
+ "			segmentWrite(number);" + "\n"
+ "			Serial.print('selected number : ');" + "\n"
+ "			Serial.println(number);" + "\n"
+ "		}" + "\n"
+ "	}" + "\n"
+ "}" + "\n"
+ "\n"
+ "void segmentWrite(int n) {" + "\n"
+ "	byte segmentBit = 0;" + "\n"
+ "	switch(n) {" + "\n"
+ "		case 0:" + "\n"
+ "			segmentBit = B00111111;" + "\n"
+ "			break;" + "\n"
+ "		case 1:" + "\n"
+ "			segmentBit = B00000110;" + "\n"
+ "			break;" + "\n"
+ "		case 2:" + "\n"
+ "			segmentBit = B01011011;" + "\n"
+ "			break;" + "\n"
+ "		case 3:" + "\n"
+ "			segmentBit = B01001111;" + "\n"
+ "			break;" + "\n"
+ "		case 4:" + "\n"
+ "			segmentBit = B01100110;" + "\n"
+ "			break;" + "\n"
+ "		case 5:" + "\n"
+ "			segmentBit = B01101101;" + "\n"
+ "			break;" + "\n"
+ "		case 6:" + "\n"
+ "			segmentBit = B01111101;" + "\n"
+ "			break;" + "\n"
+ "		case 7:" + "\n"
+ "			segmentBit = B00000111;" + "\n"
+ "			break;" + "\n"
+ "		case 8:" + "\n"
+ "			segmentBit = B01111111;" + "\n"
+ "			break;" + "\n"
+ "		case 9:" + "\n"
+ "			segmentBit = B01101111;" + "\n"
+ "	}" + "\n"
+ "	digitalWrite(latchPin, LOW);" + "\n"
+ "	shiftOut(dataPin, clockPin, MSBFIRST, segmentBit);" + "\n"
+ "	digitalWrite(latchPin, HIGH);" + "\n"
+ "}";

