/*  making a led blink with half a second delay*/\n// for a better reading, lets call pin 7 : led\n#define led 7\nvoid setup() {\n\tpinMode(led, OUTPUT); // sets the pin as an Output\n}\nvoid loop() {\n\tdigitalWrite(led, HIGH); // turns led on\n\tdelay(500);\n\tdigitalWrite(led, LOW);\n\tdelay(500);\n}

#define latchPin 8\n#define clockPin 13\n#define dataPin 10\n\nvoid setup() {\n\tpinMode(latchPin, OUTPUT);\n\tpinMode(dataPin, OUTPUT);\n\tpinMode(clockPin, OUTPUT);\n\tSerial.begin(9600);\n\tSerial.println('<<START>>');\n}\n\nvoid loop() {\n\tif (Serial.available() > 0) {\n\t\tint number = Serial.read() - 48;\n\t\tif (number >= 0) {\n\t\t\tsegmentWrite(number);\n\t\t\tSerial.print('selected number : ');\n\t\t\tSerial.println(number);\n\t\t}\n\t}\n}\n\nvoid segmentWrite(int n) {\n\tbyte segmentBit = 0;\n\tswitch(n) {\n\t\tcase 0:\n\t\t\tsegmentBit = B00111111;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tsegmentBit = B00000110;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tsegmentBit = B01011011;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tsegmentBit = B01001111;\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tsegmentBit = B01100110;\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tsegmentBit = B01101101;\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tsegmentBit = B01111101;\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tsegmentBit = B00000111;\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\tsegmentBit = B01111111;\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tsegmentBit = B01101111;\n\t\t}\n\tdigitalWrite(latchPin, LOW);\n\tshiftOut(dataPin, clockPin, MSBFIRST, segmentBit);\n\tdigitalWrite(latchPin, HIGH);\n}

#include <LiquidCrystal.h>\nLiquidCrystal lcd(12, 11, 5, 4, 3, 2);\nfloat tempC; \nint leitura; \nint tempPin = A4; \n\nvoid setup(){\n\tanalogReference(INTERNAL);\n\tSerial.begin(9600); \n\tlcd.begin(16, 2); \n}\nvoid loop(){\n\tleitura = analogRead(tempPin); \n\ttempC = leitura / 9.31; // (value * (Vref/1023)) * 100\n\tprint(tempC);\n\tdelay(1000);\n}\n/* just to make loop function easier to read and understand, this function prints \nthe temperature in the lcd display and in the Serial port */\nvoid print(float valor){ \n\tSerial.print('temperatura: '); Serial.print(valor); \n\tSerial.println(' ÂºC'); //envia info para a serial\n\tlcd.clear();\n\tlcd.print('temp: '); lcd.print(tempC);\n\tlcd.print((char)223); lcd.print('C'); //envia info para o LCD\n}

#include <Servo.h>\nServo myServo;\nvoid setup(){\n\tmyServo.attach(9);\n}\nvoid loop(){\n\tmyServo.write(random(0,180));\n\tdelay(100);\n}
